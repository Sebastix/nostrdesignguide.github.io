"use strict";(self.webpackChunknostr_design=self.webpackChunknostr_design||[]).push([[5214],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>g});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},d=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},u="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,l=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),u=c(n),h=o,g=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return n?r.createElement(g,a(a({ref:e},d),{},{components:n})):r.createElement(g,a({ref:e},d))}));function g(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[u]="string"==typeof t?t:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8622:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:8},a="Sharing",s={unversionedId:"how-to/sharing",id:"how-to/sharing",title:"Sharing",description:"Sharing outside of nostr makes nostr grow faster. I didn't mean to rhyme, but it's true.",source:"@site/docs/how-to/sharing.md",sourceDirName:"how-to",slug:"/how-to/sharing",permalink:"/docs/how-to/sharing",draft:!1,editUrl:"https://github.com/nostrdesignguide/nostrdesignguide.github.io/tree/main/docs/how-to/sharing.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Private Key Safeguarding",permalink:"/docs/how-to/private-key-safeguarding"},next:{title:"Design Principles",permalink:"/docs/category/design-principles"}},l={},c=[{value:"Sharing on Nostr",id:"sharing-on-nostr",level:2},{value:"Broadcasting from client to client",id:"broadcasting-from-client-to-client",level:3},{value:"Sharing to Other Platforms",id:"sharing-to-other-platforms",level:2},{value:"Client UI Considerations",id:"client-ui-considerations",level:3},{value:"If it&#39;s hidden, it doesn&#39;t exist",id:"if-its-hidden-it-doesnt-exist",level:4},{value:"Nostr Button",id:"nostr-button",level:2},{value:"Open Graph Data",id:"open-graph-data",level:2}],d={toc:c},u="wrapper";function p(t){let{components:e,...i}=t;return(0,o.kt)(u,(0,r.Z)({},d,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sharing"},"Sharing"),(0,o.kt)("p",null,"Sharing outside of nostr makes nostr grow faster. I didn't mean to rhyme, but it's true. "),(0,o.kt)("p",null,"So, let's build in some sharing features to help people share their content and media outside of nostr!"),(0,o.kt)("h2",{id:"sharing-on-nostr"},"Sharing on Nostr"),(0,o.kt)("p",null,"Some clients already do a great job with content discovery by surfacing different types of notes. Amethyst and Snort automatically show recent streams started via ZapStream. "),(0,o.kt)("img",{src:n(6456).Z}),(0,o.kt)("p",null,"Unless your goal is to build a single-task client that does one thing well, interoperable content such as streams, chats and communities can be a great way to promote discovery within nostr."),(0,o.kt)("h3",{id:"broadcasting-from-client-to-client"},"Broadcasting from client to client"),(0,o.kt)("p",null,"Sharing on nostr can also happen via direct action such as pressing a button to broadcast a note to nostr relays. "),(0,o.kt)("h2",{id:"sharing-to-other-platforms"},"Sharing to Other Platforms"),(0,o.kt)("h3",{id:"client-ui-considerations"},"Client UI Considerations"),(0,o.kt)("h4",{id:"if-its-hidden-it-doesnt-exist"},"If it's hidden, it doesn't exist"),(0,o.kt)("h2",{id:"nostr-button"},"Nostr Button"),(0,o.kt)("h2",{id:"open-graph-data"},"Open Graph Data"))}p.isMDXComponent=!0},6456:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/cross-client-sharing-84271c8f7d2fec890a6c2ae5faa30c9b.png"}}]);